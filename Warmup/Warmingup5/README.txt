원점에서의 거리를 빠르게 비교하기 위해,
거리 비교 식에 제곱근을 하지 않고 계산하는 get_unsqared_distance 함수를 사용하였습니다.

배열은 std::array를 사용하였습니다.
각 정점은 길이가 3인 배열이 아니라, Point 구조체(또는 클래스)를 만들어 저장했습니다.

배열의 두개의 포인터(데이터형으로써 포인터가 아닌 개념적인 포인터) top, bottom을 사용했습니다.
각각 배열의 현재 가장 큰 인덱스값 + 1, 가장 작은 인덱스값을 가리킵니다.

교수님이 원하시는 것이 원형 리스트인지, deque 인지 확실치 않아서, 일단 deque를 기준으로 구현했는데,
만약 원형 리스트였다면 맨 아래가 비어있고 9번까지 차있다면, e 명령어를 사용했을 때 top = 0이 되야 하지만,
top = 10 이고 아래에 빈 칸이 있을 때 아래에 삽입하면 bottom -= 1하도록 구현했습니다.

명령어 s에 대해서는 정렬된 배열 sorted를 따로 저장하여 s가 토글되었을때만 출력하도록 구현했습니다.